<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>7</zoom_level>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>406</x>
      <y>497</y>
      <w>139</w>
      <h>62</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>126;21;119;21;21;21;21;49</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>511</x>
      <y>462</y>
      <w>153</w>
      <h>97</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;21;21;56;140;56;140;84</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>455</x>
      <y>280</y>
      <w>155</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>QuestionBank: vector&lt;Question&gt;</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>742</x>
      <y>259</y>
      <w>246</w>
      <h>113</h>
    </coordinates>
    <panel_attributes>Question
--
+questionString: string
+answerChoice: vector&lt;string&gt;
+correctAnswer: char
--
+Question(questionString: string, correctAnswer: char)
+addAnswerChoice(answer: string)
+askQuestion()
+checkAnswer(answerInput: char): bool
</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>175</x>
      <y>322</y>
      <w>197</w>
      <h>113</h>
    </coordinates>
    <panel_attributes>QuizAttempt
--
#student_user: StudentUser*
#quizQuestions: vector&lt;Question*&gt;
#correctAnswers: int
--
+QuizAttempt(student_user: StudentUser*)
+runQuiz()
+getQuestions()
+saveResultToProfile()</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>364</x>
      <y>546</y>
      <w>120</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>StudentUser
--
#profile: StudentProfile*
--
+StudentUser(ID: string)</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>308</x>
      <y>658</y>
      <w>239</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>StudentProfile
--
#studentID: string
#profileFileName: string
--
+StudentProfile(ID: string)
+addResult(dateOfQuiz: string, correctAnswers: int)
+printToScreen()
+printToFile(output: ofstream)
</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>623</x>
      <y>693</y>
      <w>64</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>ClassReport
</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>560</x>
      <y>546</y>
      <w>211</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>AdminUser
--
--
+AdminUser(ID: string)
+viewProfile(studentID: string)
+generateClassReport(reportFileName: string)
+modifyQuestionBank()</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>476</x>
      <y>406</y>
      <w>120</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>{abstract}
/User/
--
#userID: string
#permissionLevel: Char
--
+User(ID: string)</panel_attributes>
    <additional_attributes/>
    <custom_code>//This is a tutorial for a self resizing component 
//In addition you are able to resize at manually
//As soon as it is resized manually a new text is
//added to the property panel
setAutoresize(20,20,10);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>588</x>
      <y>259</y>
      <w>167</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;--&gt;
m2=10..n
contains &gt;</panel_attributes>
    <additional_attributes>21;35;154;35</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>364</x>
      <y>392</y>
      <w>126</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..*
&lt; attempts</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;60.0;160.0;58.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>294</y>
      <w>70</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
modifies ^</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Relation</type>
    <coordinates>
      <x>231</x>
      <y>259</y>
      <w>237</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;--&gt;
m2=1
 accesses &gt;</panel_attributes>
    <additional_attributes>49;63;49;35;224;35</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>420</x>
      <y>595</y>
      <w>49</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
m2=1
has v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>644</x>
      <y>616</y>
      <w>77</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
m2=0..*
generates v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>273</x>
      <y>427</y>
      <w>217</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-&gt;
m2=1


stores results to &gt;</panel_attributes>
    <additional_attributes>10.0;15.0;10.0;70.0;290.0;70.0</additional_attributes>
  </element>
</diagram>
